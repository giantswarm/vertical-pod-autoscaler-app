global:
  imageRegistry: docker.io

vertical-pod-autoscaler:
  nameOverride: ""
  fullnameOverride: ""
  admissionController:
    # Enable the component
    enabled: true

    image:
      registry: docker.io
      repository: giantswarm/vpa-admission-controller
      tag: 0.14.0
      pullPolicy: IfNotPresent

    pdb:
      create: true

    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault

    securityContext:
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL

    replicaCount: 2

    resources:
      limits:
        cpu: 500m
      requests:
        cpu: 250m
        memory: 250Mi

    verticalPodAutoscaler:
      enabled: false
      containerPolicies:
        controlledResources:
        - cpu
        - memory
        minAllowed:
          cpu: 200m
          memory: 250Mi
        mode: Auto

    extraArgs:
      kube-api-burst: 75
      kube-api-qps: 50
      v: 2
      webhook-timeout-seconds: 5

    metrics:
      serviceMonitor:
        # Specifies whether a service monitor should be created
        enabled: true

  recommender:
    replicaCount: 1
    # Do not create PDB when replica is 1
    pdb:
      create: false
    # When using single replica we need to annotate the pod for Cluster Autoscaler to allow eviction in kube-system namespace
    podAnnotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

    image:
      registry: docker.io
      repository: giantswarm/vpa-recommender
      tag: 0.14.0
      pullPolicy: IfNotPresent

    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault

    securityContext:
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL

    # The recommender pod is often evicted by VPA itself
    # In large clusters it takes some seconds to process all the VPA resources
    # so delay the initial checks
    livenessProbe:
      initialDelaySeconds: 45
      periodSeconds: 15
      failureThreshold: 5
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 15
      failureThreshold: 5

    resources:
      requests:
        cpu: 500m
        memory: 250Mi

    # Disable the recommender VPA
    # The issue is that the VPA keeps on re-scheduling the pod because the memory
    # consumption of the recommender varies a lot between when it's idle and when
    # it calculated the recommendations
    verticalPodAutoscaler:
      enabled: false
      containerPolicies:
        controlledResources:
        - cpu
        - memory
        minAllowed:
          cpu: 250m
          memory: 250Mi
        mode: Auto

    extraArgs:
      # CPU usage percentile that will be used as a base for CPU target recommendation.
      # Doesn't affect CPU lower bound, CPU upper bound nor memory recommendations.
      # Sets however a CPU value which matches the 95% percentile of the workload consumption
      target-cpu-percentile: 0.95
      # Allow the recommender to execute more requests against the api
      kube-api-burst: 75
      kube-api-qps: 50
      # Double the memory during the next Pod resource update, to speed up the recovery from an OOMKilled
      oom-bump-up-ratio: 2.0
      # The lowest setting for the CPU
      pod-recommendation-min-cpu-millicores: 50
      # This is the recommended default for the memory
      pod-recommendation-min-memory-mb: 250
      # If true, only track pods which have an associated VPA
      memory-saver: true
      v: 2

    metrics:
      serviceMonitor:
        # Specifies whether a service monitor should be created
        enabled: true

  updater:
    # Enable the component
    enabled: true

    replicaCount: 1
    # Do not create PDB when replica is 1
    pdb:
      create: false
    # When using single replica we need to annotate the pod for Cluster Autoscaler to allow eviction in kube-system namespace
    podAnnotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

    image:
      registry: docker.io
      repository: giantswarm/vpa-updater
      tag: 0.14.0
      pullPolicy: IfNotPresent

    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault

    securityContext:
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL

    # The updater pod is often evicted by VPA itself
    # In large clusters it takes some seconds to process all the VPA resources
    # so delay the initial checks
    livenessProbe:
      initialDelaySeconds: 45
      periodSeconds: 15
      failureThreshold: 5
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 15
      failureThreshold: 5

    resources:
      requests:
        cpu: 500m
        memory: 250Mi

    verticalPodAutoscaler:
      enabled: false
      containerPolicies:
        controlledResources:
        - cpu
        - memory
        minAllowed:
          cpu: 250m
          memory: 250Mi
        mode: Auto

    extraArgs:
      kube-api-burst: 75
      kube-api-qps: 50
      v: 2
      # min-replicas set to 1 to prevent the updater from throwing errors concerning prometheus only having 1 replica
      min-replicas: 1

    metrics:
      serviceMonitor:
        # Specifies whether a service monitor should be created
        enabled: true

  crds:
    image:
      registry: docker.io
      repository: giantswarm/kubectl
      tag: 1.27.5

ciliumNetworkPolicy:
  enabled: true
