{{- $values := (index .Values "vertical-pod-autoscaler") -}}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "vertical-pod-autoscaler.recommender.fullname" . }}-observability
  labels:
    {{- include "vertical-pod-autoscaler.recommenderObservability.labels" . | nindent 4 }}
    {{- if $values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" $values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or $values.recommender.deploymentAnnotations $values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list $values.recommender.deploymentAnnotations $values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $values.recommender.replicaCount }}
  selector:
    matchLabels:
      {{- include "vertical-pod-autoscaler.recommenderObservability.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "vertical-pod-autoscaler.recommenderObservability.selectorLabels" . | nindent 8 }}
        {{- if $values.recommender.podLabels }}
        {{- include "common.tplvalues.render" ( dict "value" $values.recommender.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if $values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" $values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
      {{- if or $values.recommender.podAnnotations $values.commonAnnotations }}
      annotations:
        {{- if $values.recommender.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" $values.recommender.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if $values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" $values.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "common.images.pullSecrets" ( dict "images" ( list $values.recommender.image ) "global" $values.global ) | nindent 6 }}
      {{- if $values.recommender.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" $values.recommender.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if $values.recommender.priorityClassName }}
      priorityClassName: {{ $values.recommender.priorityClassName | quote }}
      {{- end }}
      {{- if $values.recommender.runtimeClassName }}
      runtimeClassName: {{ $values.recommender.runtimeClassName | quote }}
      {{- end }}
      serviceAccountName: {{ include "vertical-pod-autoscaler.recommender.serviceAccountName" . }}
      {{- if $values.recommender.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" $values.recommender.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $values.recommender.podSecurityContext | nindent 8 }}
      containers:
        - name: recommender
          securityContext:
            {{- toYaml $values.recommender.securityContext | nindent 12 }}
          image: {{ include "common.images.image" ( dict "imageRoot" $values.recommender.image "global" $values.global ) }}
          imagePullPolicy: {{ $values.recommender.image.pullPolicy }}
          args:
            - --address=:{{ $values.recommender.containerPorts.metrics }}
            {{- range $key, $value := $values.recommenderObservability.extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
          {{- if $values.recommender.extraEnvVars }}
          env:
            {{- include "common.tplvalues.render" (dict "value" $values.recommender.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
          {{- if or $values.recommender.extraEnvVarsCM $values.recommender.extraEnvVarsSecret }}
          envFrom:
            {{- if $values.recommender.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" $values.recommender.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if $values.recommender.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" $values.recommender.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ $values.recommender.containerPorts.metrics }}
              protocol: TCP
          {{- if $values.recommender.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: {{ $values.recommender.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $values.recommender.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $values.recommender.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ $values.recommender.livenessProbe.failureThreshold }}
            successThreshold: {{ $values.recommender.livenessProbe.successThreshold }}
          {{- end }}
          {{- if $values.recommender.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: {{ $values.recommender.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $values.recommender.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $values.recommender.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ $values.recommender.readinessProbe.failureThreshold }}
            successThreshold: {{ $values.recommender.readinessProbe.successThreshold }}
          {{- end }}
          {{- if $values.recommender.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: {{ $values.recommender.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ $values.recommender.startupProbe.periodSeconds }}
            timeoutSeconds: {{ $values.recommender.startupProbe.timeoutSeconds }}
            failureThreshold: {{ $values.recommender.startupProbe.failureThreshold }}
            successThreshold: {{ $values.recommender.startupProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml $values.recommender.resources | nindent 12 }}
          volumeMounts:
            {{- if $values.recommender.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" $values.recommender.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      {{- with $values.recommender.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with $values.recommender.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $values.recommender.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if $values.recommender.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" $values.recommender.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
